

Record Syntax
record_name = {fieldname1 = value1, fieldname2 = value2....fieldnameN = valueN}

List Syntax
List_name = [value1,value2,value3.....valuen]

Variable Syntax
variable_name = value
variable_name:data_type = value

1. What are the 'primitive' types?
-bool
-Char 
-string 
-float 
-int 

2. What kinds of composite types can you define, or are built in?


3. What kinds of collections are available?
-List
-records
-Dictionary
-Set
-Tuple

How do you handle coercion, conversion, casting (i.e. how to you change types)?
What do iterators and generators look like?
What kinds of 'constants' and variables does the language support?
Does the language support immutable values?
Examples of statements vs expressions (and does the language have any unique features, for example, switch expressions?)
Does the language support pattern matching or any other kind of 'destructuring' sugar.
What does imperative vs declarative summation look like?
What does imperative vs declarative grouping and filtering look like?






**Elm documentation**

## Strongly-Typed Or Weakly-Typed
Elm is strongly-typed. 
Eg. 'a'   : Char
    "abc" : String


## Static-Typed vs Dynamic-Typed
Elm is statically typed language.
